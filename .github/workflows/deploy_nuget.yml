on:
  workflow_call:
    inputs:
      project-name:
        required: true
        type: string
      version-fragment:
        required: true
        type: string
      nuget-name:
        required: true
        type: string
      dotnet-version:
        required: true
        type: string
    secrets:
      NUGET_TOKEN:
        required: true

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget
  NuGetSource: https://api.nuget.org/v3/index.json

jobs:
  deploy_nuget:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          
      - name: Convert nuget-name to lowercase
        run: echo "NUGET_NAME=$(echo ${{ inputs.nuget-name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  
      - name: Get latest Nuget version
        continue-on-error: true
        uses: senmu/download-json-property-action@v1.4.0
        id: nuget-latest-version
        with:
          url: https://api.nuget.org/v3/registration5-semver1/${{ env.NUGET_NAME }}/index.json
          property_path: items.0.upper
          
      - name: Set default version if empty
        run: |
          VERSION="${{ steps.nuget-latest-version.outputs.value }}"
          if [ -z "$VERSION" ]; then
            VERSION="0.0.1"
          fi
          echo "CURRENT_NUGET_VERSION=$VERSION" >> "$GITHUB_ENV"
  
      - name: Increase latest nuget version
        id: nuget-next-version
        uses: christian-draeger/increment-semantic-version@1.1.0
        with:
          current-version: ${{ env.CURRENT_NUGET_VERSION }}
          version-fragment: ${{ inputs.version-fragment }}
  
      - name: Pack nuget
        run: dotnet pack ${{ inputs.project-name }} -c Release -o ${{ env.NuGetDirectory }} /p:Version=${{ steps.nuget-next-version.outputs.next-version }}
          
      - name: Publish NuGet package
        run: |
          dotnet nuget push ${{ env.NuGetDirectory }}/${{ env.NUGET_NAME }}.${{ steps.nuget-next-version.outputs.next-version }}.nupkg -k "${{ secrets.NUGET_TOKEN }}" -s ${{ env.NuGetSource }} --skip-duplicate